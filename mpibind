#!/bin/bash
parse_chunk () {
        chunk=$1
	nodes_in_chunk=`echo $chunk | sed "s/^\([0-9]\+\).*/\1/"`
        mpi_per_node=`echo $chunk | sed "s/.*mpiprocs=\([0-9]\+\).*/\1/"`
	if [[ $(echo $chunk | grep ompthreads) ]]; then
	   omp_per_node=`echo $chunk | sed "s/.*ompthreads=\([0-9]\+\).*/\1/"`
	else
	   omp_per_node=1
        fi
	tot_mpi=$((nodes_in_chunk*mpi_per_node))
	if [ $LMOD_FAMILY_MPI == "cray-mpich" ]; then
           printf "%s" "-n $tot_mpi -ppn $mpi_per_node --cpu-bind none -env OMP_NUM_THREADS=$omp_per_node "
        elif [ $LMOD_FAMILY_MPI == "openmpi" ]; then
           printf "%s" "-np $tot_mpi --map-by ppr:$mpi_per_node:node --bind-to none --oversubscribe -x OMP_NUM_THREADS=$omp_per_node "
        else
           >&2 echo "Error: mpibind requires either cray-mpich or openmpi"
           exit 1
        fi
}

args=$*
pbs_job_id=$(ps -o comm= $PPID | awk '{split($0,a,".");print a[1]}')
select_line=`qstat -w -xf $pbs_job_id | grep "select" | awk '{print $3}'`
chunks=`echo $select_line | awk '{split($0,a,"+")} END {for (elem in a) {print a[elem] } }'`
mpicmd="mpiexec "
echo "Chunk info" > mpibind.log
for c in $chunks; do
   echo "  $c" >> mpibind.log
   mpicmd+=`parse_chunk $c`
   mpicmd+="$args : "
done
mpicmd=`echo "$mpicmd" | sed "s/: $//"`
echo "-- -- -- --" >> mpibind.log
echo "MPI exec line:" >> mpibind.log
echo "  $mpicmd" >> mpibind.log
echo "-- -- -- --" >> mpibind.log
echo "Binding Report:" >> mpibind.log
$mpicmd
